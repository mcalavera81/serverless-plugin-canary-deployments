{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "HelloLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/hello-custom-name"
      }
    },
    "PreHookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/canary-deployments-test-dev-preHook"
      }
    },
    "PostHookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/canary-deployments-test-dev-postHook"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "canary-deployments-test",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/canary-deployments-test-dev*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello-custom-name:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/canary-deployments-test-dev*:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello-custom-name:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codedeploy:*"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "canary-deployments-test",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "HelloLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/canary-deployments-test/dev/1602873541477-2020-10-16T18:39:01.477Z/canary-deployments-test.zip"
        },
        "FunctionName": "hello-custom-name",
        "Handler": "handler.hello",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "VAR_A": "read",
            "GW_URL": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "DependsOn": [
        "HelloLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "HelloLambdaVersionGUWvFyYRF9lVwlW2QlQ7RwDbA8t15ITKWfP1n2kwiNc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HelloLambdaFunction"
        },
        "CodeSha256": "D5p6TrsSijU5MTJW9kve/z+Tt6VHiyjhFrYCD+0Zm7o="
      }
    },
    "PreHookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/canary-deployments-test/dev/1602873541477-2020-10-16T18:39:01.477Z/canary-deployments-test.zip"
        },
        "FunctionName": "canary-deployments-test-dev-preHook",
        "Handler": "hooks.pre",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "VAR_A": "read",
            "GW_URL": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/dev"
                ]
              ]
            },
            "function_name": "hello-custom-name"
          }
        }
      },
      "DependsOn": [
        "PreHookLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PreHookLambdaVersionJN5O1sTMUvARhoV1mOqlA19YrQKMfCcIU90BI7uMUUU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PreHookLambdaFunction"
        },
        "CodeSha256": "D5p6TrsSijU5MTJW9kve/z+Tt6VHiyjhFrYCD+0Zm7o="
      }
    },
    "PostHookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/canary-deployments-test/dev/1602873541477-2020-10-16T18:39:01.477Z/canary-deployments-test.zip"
        },
        "FunctionName": "canary-deployments-test-dev-postHook",
        "Handler": "hooks.post",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 300,
        "Environment": {
          "Variables": {
            "VAR_A": "read",
            "GW_URL": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/dev"
                ]
              ]
            },
            "function_name": "hello-custom-name"
          }
        }
      },
      "DependsOn": [
        "PostHookLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "PostHookLambdaVersionVA8cQM2dDuhVdv8CgGBFye2kMFr2OctXr9G0BrVWU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PostHookLambdaFunction"
        },
        "CodeSha256": "D5p6TrsSijU5MTJW9kve/z+Tt6VHiyjhFrYCD+0Zm7o="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-canary-deployments-test",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceHello": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "hello",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodHelloGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHello"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloLambdaFunctionAliasLive}/invocations"
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1602873518550": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodHelloGet"
      ]
    },
    "HelloLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "HelloLambdaFunctionAliasLive"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "HelloFooAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "Namespace": "AWS/Lambda",
        "MetricName": "Errors",
        "Threshold": 1,
        "Period": 60,
        "EvaluationPeriods": 1,
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "OKActions": [],
        "AlarmActions": [],
        "InsufficientDataActions": [],
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "HelloLambdaFunction"
            }
          }
        ],
        "TreatMissingData": "missing",
        "Statistic": "Sum"
      }
    },
    "CanarydeploymentstestdevDeploymentApplication": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      }
    },
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda",
          "arn:aws:iam::aws:policy/AWSLambdaFullAccess"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codedeploy.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "HelloLambdaFunctionDeploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "CanarydeploymentstestdevDeploymentApplication"
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM",
            "DEPLOYMENT_STOP_ON_REQUEST"
          ]
        },
        "DeploymentConfigName": {
          "Fn::Sub": [
            "CodeDeployDefault.Lambda${ConfigName}",
            {
              "ConfigName": "Canary10Percent5Minutes"
            }
          ]
        },
        "DeploymentStyle": {
          "DeploymentType": "BLUE_GREEN",
          "DeploymentOption": "WITH_TRAFFIC_CONTROL"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "CodeDeployServiceRole",
            "Arn"
          ]
        },
        "AlarmConfiguration": {
          "Alarms": [
            {
              "Name": {
                "Ref": "HelloFooAlarm"
              }
            }
          ],
          "Enabled": true
        }
      }
    },
    "HelloLambdaFunctionAliasLive": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionVersion": {
          "Fn::GetAtt": [
            "HelloLambdaVersionGUWvFyYRF9lVwlW2QlQ7RwDbA8t15ITKWfP1n2kwiNc",
            "Version"
          ]
        },
        "FunctionName": {
          "Ref": "HelloLambdaFunction"
        },
        "Name": "Live"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "CanarydeploymentstestdevDeploymentApplication"
          },
          "AfterAllowTrafficHook": {
            "Ref": "PostHookLambdaFunction"
          },
          "BeforeAllowTrafficHook": {
            "Ref": "PreHookLambdaFunction"
          },
          "DeploymentGroupName": {
            "Ref": "HelloLambdaFunctionDeploymentGroup"
          }
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "HelloLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloLambdaVersionGUWvFyYRF9lVwlW2QlQ7RwDbA8t15ITKWfP1n2kwiNc"
      }
    },
    "PreHookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PreHookLambdaVersionJN5O1sTMUvARhoV1mOqlA19YrQKMfCcIU90BI7uMUUU"
      }
    },
    "PostHookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PostHookLambdaVersionVA8cQM2dDuhVdv8CgGBFye2kMFr2OctXr9G0BrVWU"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  }
}